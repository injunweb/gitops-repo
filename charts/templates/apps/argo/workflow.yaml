{{- range $app := .Values.applications }}
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ $.Values.project }}-{{ $app.name }}-workflow
  namespace: {{ $.Values.project }}
spec:
  serviceAccountName: argo-events-sa
  entrypoint: build
  arguments:
    parameters:
      - name: sha
  volumes:
    - name: docker-config
      secret:
        secretName: registry-secret
  templates:
    - name: build
      dag:
        tasks:
          - name: build
            template: build-container
          - name: update-config
            template: update-config
            dependencies: [build]
            arguments:
              parameters:
                - name: sha
                  value: "{{`{{workflow.parameters.sha}}`}}"

    - name: build-container
      container:
        image: gcr.io/kaniko-project/executor:latest
        args:
          - "--dockerfile=Dockerfile"
          - "--context=git://github.com/{{ $app.ghOwner }}/{{ $app.ghRepo }}.git"
          - "--destination=harbor.injunweb.com/injunweb/{{ $.Values.project }}-{{ $app.name }}:{{`{{workflow.parameters.sha}}`}}"
          - "--destination=harbor.injunweb.com/injunweb/{{ $.Values.project }}-{{ $app.name }}:latest"
        volumeMounts:
          - name: docker-config
            mountPath: /kaniko/.docker
        env:
          - name: GIT_USERNAME
            valueFrom:
              secretKeyRef:
                name: github-secret
                key: username
          - name: GIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: github-secret
                key: token

    - name: update-config
      inputs:
        parameters:
          - name: sha
      container:
        image: curlimages/curl:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            curl -X POST https://api.github.com/repos/injunweb/projects-gitops/dispatches \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -d '{
                "event_type": "config-api",
                "client_payload": {
                  "path": "projects/{{$.Values.project}}/applications/{{$app.name}}",
                  "action": "apply",
                  "spec": {
                    "tag": "'"{{`{{inputs.parameters.sha}}`}}"'"
                  }
                }
              }'
        env:
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-secret
                key: token
{{- end }}
